@model WeatherApp2023.Models.WeatherViewModel

@{
    ViewData["Title"] = "Weather stuff";
}



<head>
	<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
	<script type="text/javascript">
        

		window.onload = function () {


            if ('@Model.SelectedCityValue' != '') {
                var temperatureChart = new CanvasJS.Chart("temperatureChartContainer",
                    {
                        title: {
                            text: "Temperatures"
                        },
                        data: [
                            {
                                type: "line",
                                name: "Minutes back in time",
                                showInLegend: true,
                                dataPoints: @Html.Raw( @Model.TemperatureDatapointsForGraph)
                                    }
                        ]
                    });
                temperatureChart.render();
                calculateTrendLine(temperatureChart);
                
                var windChart = new CanvasJS.Chart("windChartContainer",
                {
                    title: {
                        text: "Wind speed in mph"
                    },
                    data: [
                        {
                            type: "line",
                            name: "Time",
                            showInLegend: true,
                            dataPoints: @Html.Raw( @Model.WindDatapointsForGraph)
                                }
                    ]
                });

            
            windChart.render();
            calculateTrendLine(windChart);
            }


            function calculateTrendLine(chart) {
                var a, b, c, d, e, slope, yIntercept;
                var xSum = 0, ySum = 0, xySum = 0, xSquare = 0, dpsLength = chart.data[0].dataPoints.length;
                for (var i = 0; i < dpsLength; i++)
                    xySum += (chart.data[0].dataPoints[i].x * chart.data[0].dataPoints[i].y)
                a = xySum * dpsLength;

                for (var i = 0; i < dpsLength; i++) {
                    xSum += chart.data[0].dataPoints[i].x;
                    ySum += chart.data[0].dataPoints[i].y;
                }
                b = xSum * ySum;

                for (var i = 0; i < dpsLength; i++)
                    xSquare += Math.pow(chart.data[0].dataPoints[i].x, 2);
                c = dpsLength * xSquare;

                d = Math.pow(xSum, 2);
                slope = (a - b) / (c - d);
                e = slope * xSum;
                yIntercept = (ySum - e) / dpsLength;

                var startPoint = getTrendLinePoint(chart.data[0].dataPoints[0].x, slope, yIntercept);
                var endPoint = getTrendLinePoint(chart.data[0].dataPoints[dpsLength - 1].x, slope, yIntercept);

                chart.addTo("data", {
                    type: "line", //Line series showing trend
                    markerSize: 0,
                    dataPoints: [startPoint, endPoint]
                });
            }

            function getTrendLinePoint(x, slope, intercept) {
                console.log("Called with x = " + x);
                return { x: x, y: ((slope * x) + intercept) };
            }
		}

        
	</script>

</head>



<h1>@ViewData["Title"]</h1>



<div class="form-group">
	<label  class="control-label"> Select City</label>

	<form asp-controller="Weather" asp-action="Index" method="post">
		<select asp-for="SelectedCityValue" asp-items="@ViewBag.cities">
			<option disabled selected>--- SELECT ---</option>
		</select>
        <input type="submit" value="View graphs"/>
	</form>

</div>




<p>Click a graph to see a trendline</p>



<div id="temperatureChartContainer" style="height: 300px; width: 100%;"></div>


<p></p>

<div id="windChartContainer" style="height: 300px; width: 100%;"></div>


